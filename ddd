function run2(gen) {
    var g = gen();
    console.log('begin');
    return new Promise(function(resolve, reject) {
        function next(data) {
            console.log('inNext');
            var result = g.next(data);
            console.log(result.done);
            if (result.done)
            {
                console.log(result);
                return result.value;
            }
            console.log(result.value);
            result.value.then(function(data) {
                console.log('promise end');
                console.log(result.value);
                console.log(data);
                next(data);
            });
        }
        next();
    })

}

function compose(middleware){
  return function *(next){
    var i = middleware.length;
    var prev = next || noop();
    var curr;

    while (i--) {
      curr = middleware[i];
      prev = curr.call(this, prev);
    }

    yield *prev;
  }
}



function *noop(){}

var readFile2 = function(fileName) {
    return new Promise(function(resolve, reject) {
        setTimeout(function() {
            console.log('in promise' + fileName);
            // reject(fileName);
            resolve(fileName);
        },1000);
    });
};

var gen2 = function*(next) {
    var f1 = yield readFile2('./hi.txt');
    console.log(f1.toString());
    yield next;
    var f2 = yield readFile2('./hello.txt');
    console.log(f2.toString());
    return 22
};
var gen3 = function*(next) {
    var f1 = yield readFile2('./hi2.txt');
    console.log(f1.toString());
    var f2 = yield readFile2('./hello2.txt');
    console.log(f2.toString());
    return 22
};

compose([gen2,gen3])

var ckk = run2(compose([gen2,gen3]));
